/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.5
 * Generated at: 2019-01-24 17:01:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1540909452097L));
    _jspx_dependants.put("jar:file:/C:/Users/taonu/Desktop/camunda-extend/target/camunda-process-1.0-SNAPSHOT/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153359882000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!doctype html>\n");
      out.write("<html>\n");
      out.write("\n");
      out.write("    <head>\n");
      out.write("        <title>BPMN Custom Execute</title>\n");
      out.write("\n");
      out.write("        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n");
      out.write("        <meta charshet=\"utf-8\" />\n");
      out.write("        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("        <title>Visual Admin Dashboard - Home</title>\n");
      out.write("        <meta name=\"description\" content=\"\">\n");
      out.write("        <meta name=\"author\" content=\"templatemo\">\n");
      out.write("        <link href=\"./resources/css/font-awesome.css\" rel=\"stylesheet\">\n");
      out.write("        <link href=\"./resources/css/bootstrap.css\" rel=\"stylesheet\">\n");
      out.write("        <link href=\"./resources/css/templatemo-style.css\" rel=\"stylesheet\">\n");
      out.write("        <link href=\"./resources/css/main.css\" rel=\"stylesheet\">\n");
      out.write("        <link href=\"./resources/css/util.css\" rel=\"stylesheet\">\n");
      out.write("        <link href=\"./resources/css/responsive.css\" rel=\"stylesheet\">\n");
      out.write("        <link href=\"./resources/css/preview.css\" rel=\"stylesheet\">\n");
      out.write("        <link href=\"./resources/css/In_out.css\" rel=\"stylesheet\">\n");
      out.write("\n");
      out.write("\n");
      out.write("    </head>\n");
      out.write("\n");
      out.write("    <body ng-app=\"camunda-extend\">\n");
      out.write("        <nav class=\"navbar navbar-default navbar-static-top\">\n");
      out.write("            <div class=\"container-fluid\">\n");
      out.write("                <div class=\"row navbar-header\">\n");
      out.write("                    <a href=\"#\" class=\"navbar-brand navbar-link\">\n");
      out.write("                        <img width=\"25px \" src=\"./resources/images/camunda.60.png\" />\n");
      out.write("                        <!-- <span>Camunda Extend</span> -->\n");
      out.write("                    </a>\n");
      out.write("                    <button data-toggle=\"collapse\" data-target=\"#navcol-1\" class=\"navbar-toggle collapsed\">\n");
      out.write("                        <span class=\"sr-only\">Toggle navigation</span>\n");
      out.write("                        <span class=\"icon-bar\"></span>\n");
      out.write("                        <span class=\"icon-bar\"></span>\n");
      out.write("                        <span class=\"icon-bar\"></span>\n");
      out.write("                    </button>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"collapse navbar-collapse\" id=\"navcol-1\">\n");
      out.write("                    <ul class=\"nav navbar-nav navbar-right navbar-header-ul\">\n");
      out.write("                        <li class=\"dropdown\"><a data-toggle=\"dropdown\" aria-expanded=\"false\" href=\"#\" class=\"dropdown-toggle\">\n");
      out.write("                                <i class=\"glyphicon glyphicon-user\"></i>{{globals.currentUser.username}}</a>\n");
      out.write("                            <ul role=\"menu\" class=\"dropdown-menu\">\n");
      out.write("                                <li role=\"presentation\"><a href=\"#\">My profile</a></li>\n");
      out.write("                                <li role=\"presentation\"><a href=\"#/exit\">Sign out</a></li>\n");
      out.write("                            </ul>\n");
      out.write("                        </li>\n");
      out.write("                        <li class=\"dropdown\"><a data-toggle=\"dropdown\" aria-expanded=\"false\" href=\"#\" class=\"dropdown-toggle\"><i\n");
      out.write("                                    class=\"glyphicon glyphicon-home\"></i> <span class=\"caret\"></span></a>\n");
      out.write("                            <ul role=\"menu\" class=\"dropdown-menu\">\n");
      out.write("                                <li role=\"presentation\"><a href=\"#\">Admin</a></li>\n");
      out.write("                                <li role=\"presentation\"><a href=\"#\">Cokkit</a></li>\n");
      out.write("                                <li role=\"presentation\"><a href=\"#/exit\">Exit</a></li>\n");
      out.write("                            </ul>\n");
      out.write("                        </li>\n");
      out.write("                    </ul>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </nav>\n");
      out.write("        <div ng-view></div>\n");
      out.write("        <footer class=\"text-center navbar-static-bottom\">\n");
      out.write("            <p style=\"text-align: center\">Copyright &copy; 2018</p>\n");
      out.write("            <p style=\"text-align: center\">KhÃ³a Luáº­n Tá»t Nghiáº¹p 2018-2019</p>\n");
      out.write("        </footer>\n");
      out.write("        <!-- JS -->\n");
      out.write("        <script type=\"text/javascript\" src=\"./resources/js/jquery/jquery-1.11.2.min.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"./resources/js/jquery/jquery-migrate-1.2.1.min.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"./resources/js/vendor/templatemo-script.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"./resources/js/vendor/bootstrap.min.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"./resources/js/angular/angular.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"./resources/js/angular/angular-cookies.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"./resources/js/angular/angular-route.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"./resources/js/angular/angular-animate.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"./resources/js/angular/angular-sanitize.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"./resources/js/angular/ui-bootstrap-tpls-0.13.4.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"./resources/js/camunda/camunda-app.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"./resources/js/camunda/camunda-bpm-sdk-angular.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"./resources/js/camunda/authentication_service.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"./resources/controllers/login_controller.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"./resources/controllers/home_controller.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"./resources/controllers/homeUI_controller.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"./resources/controllers/designprocess_controller.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"./resources/controllers/runprocess_controller.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"./resources/controllers/workpress_controller.js\"></script>\n");
      out.write("    </body>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
