/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.5
 * Generated at: 2019-02-07 13:03:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.resources.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class workspace_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<div>\n");
      out.write("    <div class=\"templatemo-flex-row flex-content-row\">\n");
      out.write("        <div class=\"col-1\">\n");
      out.write("            <div class=\"panel panel-default templatemo-content-widget white-bg no-padding templatemo-overflow-hidden\"\n");
      out.write("                 style=\"width:100%\">\n");
      out.write("                <div class=\"panel-heading templatemo-position-relative row\">\n");
      out.write("                    <div class=\"col-md-2\">\n");
      out.write("                        <a ng-show=\"prevProcessTab\" style=\"float: left; font-size: 25px\" ng-click=\"prevTab()\">\n");
      out.write("                            <i  class=\"glyphicon glyphicon-circle-arrow-left\"></i>\n");
      out.write("                        </a>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"col-md-5\">\n");
      out.write("                        <h2 class=\"text-uppercase\" style=\"text-align : center\">Workspace {{workspace.workspaceName}}</h2>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"col-md-5\">\n");
      out.write("                        <!--                        <div class=\"row\">\n");
      out.write("                                                    <div class=\"col-md-6\" ng-click=\"chooseDeployBPMN()\">\n");
      out.write("                                                        <a class=\"templatemo-white-button\"  >DEPLOY BPMN</a>\n");
      out.write("                                                    </div>\n");
      out.write("                                                    <div class=\"col-md-6\" ng-click=\"chooseDeployWordpress()\">\n");
      out.write("                                                        <a class=\"templatemo-white-button \">DEPLOY WORDPRESS</a>\n");
      out.write("                                                    </div>\n");
      out.write("                                                </div>-->\n");
      out.write("                        <div class=\"dropdown\">\n");
      out.write("                            <button class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-expanded=\"true\" type=\"button\"><i class=\"glyphicon glyphicon-asterisk\"></i></button>\n");
      out.write("                            <ul role=\"menu\" class=\"dropdown-menu\">\n");
      out.write("                                <li role=\"presentation\" ng-click=\"chooseDeployBPMN()\"><a href=\"#\" class=\"templatemo-white-button\">Deploy BPMN</a></li>\n");
      out.write("                                <li role=\"presentation\" ng-click=\"chooseDeployWordpress()\"><a href=\"#\" class=\"templatemo-white-button\">Deploy Wordpress </a></li>\n");
      out.write("                                <li role=\"presentation\" ng-click=\"chooseAddDeployment()\"><a href=\"#\" class=\"templatemo-white-button\">Add Deployment</a></li>\n");
      out.write("                                <li role=\"presentation\" ng-click=\"chooseAddWordpress()\"><a href=\"#\" class=\"templatemo-white-button\">Add Wordpress</a></li>\n");
      out.write("                            </ul>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                <div>\n");
      out.write("                    <ul class=\"nav nav-tabs\">\n");
      out.write("                        <li ng-class=\"{\n");
      out.write("                                    active : flagTab == 'tabProcessDefinition'\n");
      out.write("                                }\">\n");
      out.write("                            <a  href=\"#\"  ng-click=\"changeTab('tabProcessDefinition')\">Process</a>\n");
      out.write("                        </li>\n");
      out.write("                        <li ng-class=\"{\n");
      out.write("                                    active : flagTab == 'tabDeyloyment'\n");
      out.write("                                }\">\n");
      out.write("                            <a href=\"#\" ng-click=\"changeTab('tabDeyloyment')\">Deployment</a>\n");
      out.write("                        </li>\n");
      out.write("                        <li ng-class=\"{\n");
      out.write("                                    active : flagTab == 'tabWordpress'\n");
      out.write("                                }\">\n");
      out.write("                            <a href=\"#\" ng-click=\"changeTab('tabWordpress')\" >Wordpress</a>\n");
      out.write("                        </li>\n");
      out.write("                    </ul>\n");
      out.write("                </div>\n");
      out.write("                <!-- Table Process Group -->\n");
      out.write("                <div ng-show=\"flagTab == 'tabProcessDefinition'\" class=\"table-responsive\" ng-include=\"'./resources/views/process.jsp'\"></div>\n");
      out.write("                <!-- Table Deployment Group -->\n");
      out.write("                <div ng-show=\"flagTab == 'tabDeyloyment'\" class=\"table-responsive\" ng-include=\"'./resources/views/deployment.jsp'\"></div>\n");
      out.write("                <!-- Table Wordpress Group -->\n");
      out.write("                <div ng-show=\"flagTab == 'tabWordpress'\" class=\"table-responsive\" ng-include=\"'./resources/views/wordpress.jsp'\"></div>\n");
      out.write("\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div id=\"idmodelChooseDeploy\" class=\"modal modelDialog\">\n");
      out.write("\n");
      out.write("    <form class=\"modal-content animate\">\n");
      out.write("        <div class=\"imgcontainer\">\n");
      out.write("            <span onclick=\"document.getElementById('idmodelChooseDeploy').style.display = 'none'\" class=\"close\" title=\"Close Modal\">&times;</span>\n");
      out.write("            <!--<img src=\"img_avatar2.png\" alt=\"Avatar\" class=\"avatar\">-->\n");
      out.write("            <label class=\"avatar\">Deploy Resources</label>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <div class=\"container\">\n");
      out.write("            <label for=\"nameworkspace\"><b>Name Workspace</b></label>\n");
      out.write("            <input type=\"text\" ng-model=\"workspace.workspaceName\" name=\"nameworkspace\" required readonly>\n");
      out.write("            <label for=\"psw\"><b>Deployment Name</b></label>\n");
      out.write("            <input type=\"text\" placeholder=\"Enter Deployment Name\" ng-model=\"deploymentName\" id=\"deploymentName\" name=\"psw\" required>\n");
      out.write("            <label for=\"tenantid\"><b>Tenant Id</b></label>\n");
      out.write("            <input type=\"text\" placeholder=\"Enter Tenant Id\" ng-model=\"tenantid\" id=\"tenantid\" name=\"tenantid\">\n");
      out.write("            <input type=\"file\"  onchange='selectFile(event)'>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <div class=\"container\" >\n");
      out.write("            <button type=\"button\" onclick=\"document.getElementById('idmodelChooseDeploy').style.display = 'none'\" class=\"cancelbtn\">Cancel</button>\n");
      out.write("            <button type=\"button\" class=\"sucessbtn\" ng-click=\"AddFileBPMNToWorkspace()\">Create</button>\n");
      out.write("        </div>\n");
      out.write("    </form>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("<div id=\"idmodelChooseAddDeploy\" class=\"modal modelDialog\">\n");
      out.write("\n");
      out.write("    <form class=\"modal-content animate\">\n");
      out.write("        <div class=\"imgcontainer\">\n");
      out.write("            <span onclick=\"document.getElementById('idmodelChooseAddDeploy').style.display = 'none'\" class=\"close\" title=\"Close Modal\">&times;</span>\n");
      out.write("            <label class=\"avatar\">Choose Deployment</label>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <div class=\"container\">\n");
      out.write("            <div class=\"well\" style=\"overflow: auto; max-height: 500px\">\n");
      out.write("                <ul class=\"list-group checked-list-box\">\n");
      out.write("                    <li class=\"list-group-item\" style=\"cursor: pointer;\" ng-repeat=\"deployment in listDeployment\" ng-click=\"chooseDeployment($event, deployment)\">\n");
      out.write("                        <span class=\"state-icon glyphicon glyphicon-unchecked\"></span>\n");
      out.write("                        {{deployment.name}} (TenantID: {{deployment.tenantId}} | Source: {{deployment.source}} | Time: {{deployment.deploymentTime| date:'dd/MM/yyyy HH:mm:ss'}}\n");
      out.write("                    </li>\n");
      out.write("\n");
      out.write("                </ul>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <div class=\"container\" >\n");
      out.write("            <button type=\"button\" onclick=\"document.getElementById('idmodelChooseAddDeploy').style.display = 'none'\" class=\"cancelbtn\">Cancel</button>\n");
      out.write("            <button type=\"button\" class=\"sucessbtn\" ng-click=\"AddDeploymentToWorkspace()\">Create</button>\n");
      out.write("        </div>\n");
      out.write("    </form>\n");
      out.write("</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
