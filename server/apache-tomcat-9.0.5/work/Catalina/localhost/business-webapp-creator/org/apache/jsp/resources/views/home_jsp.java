/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.5
 * Generated at: 2019-02-07 13:03:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.resources.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<div class=\"templatemo-flex-row\">\n");
      out.write("    <div class=\"templatemo-sidebar\">\n");
      out.write("        <header class=\"templatemo-site-header\">\n");
      out.write("            <div class=\"square\"></div>\n");
      out.write("            <h1>Visual Executor</h1>\n");
      out.write("        </header>\n");
      out.write("        <div class=\"profile-photo-container\">\n");
      out.write("            <img src=\"./resources/images/profile-service.jpg\" alt=\"Profile Photo\" class=\"img-responsive\">\n");
      out.write("            <div class=\"profile-photo-overlay\"></div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"mobile-menu-icon\">\n");
      out.write("            <i class=\"fa fa-bars\"></i>\n");
      out.write("        </div>\n");
      out.write("        <nav class=\"templatemo-left-nav\">\n");
      out.write("            <ul class=\"uppercase\">\n");
      out.write("                <li ng-repeat=\"ws in workspaces\" data-workspace=\"{{ ws.workspaceID}}\"\n");
      out.write("                    ng-click=\"startWorkspace(ws)\">\n");
      out.write("                    <a href=\"\"><i class=\"fa fa-home fa-fw\"></i>{{ ws.workspaceName}}</a>\n");
      out.write("                </li>\n");
      out.write("            </ul>\n");
      out.write("        </nav>\n");
      out.write("    </div>  \n");
      out.write("    <!-- Main content -->\n");
      out.write("    <div class=\"templatemo-content col-1 light-gray-bg\">\n");
      out.write("        <div class=\"templatemo-top-nav-container\">\n");
      out.write("            <div class=\"row\">\n");
      out.write("                <nav class=\"templatemo-top-nav col-lg-12 col-md-12\">\n");
      out.write("                    <ul class=\"text-uppercase\">\n");
      out.write("                        <li><a href ng-click=\"showDialog('idmodelDeployWar')\">Deploy File War</a></li>\n");
      out.write("                        <li><a href ng-click=\"showDeployWarWorkspace()\">Deploy War AS WorkSpace</a></li>\n");
      out.write("                        <li><a href ng-click=\"showCreateNewWorkspace()\">New Workspace</a></li>\n");
      out.write("                    </ul>\n");
      out.write("                </nav>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <div class=\"templatemo-content-container\">\n");
      out.write("            <div ng-show=\"tableViewGroupProcess\" ng-include=\"'./resources/views/workspace.jsp'\"></div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("<link href=\"resources/css/login.css\"  rel=\"stylesheet\" type=\"text/css\"  />\n");
      out.write("<link href=\"resources/css/fileSubmit.css\"  rel=\"stylesheet\" type=\"text/css\"  />\n");
      out.write("<div id=\"idmodel\" class=\"modal modelDialog\">\n");
      out.write("\n");
      out.write("    <form class=\"modal-content animate\">\n");
      out.write("        <div class=\"imgcontainer\">\n");
      out.write("            <span onclick=\"document.getElementById('idmodel').style.display = 'none'\" class=\"close\" title=\"Close Modal\">&times;</span>\n");
      out.write("            <!--<img src=\"img_avatar2.png\" alt=\"Avatar\" class=\"avatar\">-->\n");
      out.write("            <label class=\"avatar\">Create New Workspace</label>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <div class=\"container\">\n");
      out.write("            <label for=\"nameworkspace\"><b>Name Workspace</b></label>\n");
      out.write("            <input type=\"text\" placeholder=\"Enter Workspace\" ng-model=\"nameworkspace\" name=\"nameworkspace\" required>\n");
      out.write("            <label for=\"psw\"><b>Password</b></label>\n");
      out.write("            <input type=\"password\" placeholder=\"Enter Password\" name=\"psw\" required>\n");
      out.write("            <div ng-show=\"deployfile\" class=\"custom-file-upload\">\n");
      out.write("                <input type=\"file\" id=\"myfile\"  onchange='selectFile(event)'>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <div class=\"container\" >\n");
      out.write("            <button type=\"button\" onclick=\"document.getElementById('idmodel').style.display = 'none'\" class=\"cancelbtn\">Cancel</button>\n");
      out.write("            <button type=\"button\" class=\"sucessbtn\" ng-click=\"ActionWorkspace()\">Create</button>\n");
      out.write("        </div>\n");
      out.write("    </form>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div id=\"idmodelDeployWar\" class=\"modal modelDialog\">\n");
      out.write("\n");
      out.write("    <form class=\"modal-content animate\">\n");
      out.write("        <div class=\"imgcontainer\">\n");
      out.write("            <span onclick=\"document.getElementById('idmodel').style.display = 'none'\" class=\"close\" title=\"Close Modal\">&times;</span>\n");
      out.write("            <!--<img src=\"img_avatar2.png\" alt=\"Avatar\" class=\"avatar\">-->\n");
      out.write("            <label class=\"avatar\">Deployment File War</label>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <div class=\"container\">\n");
      out.write("            <div class=\"custom-file-upload\">\n");
      out.write("                <input type=\"file\" name=\"file\" onchange='selectFile(event)'>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <div class=\"container\" >\n");
      out.write("            <button type=\"button\" onclick=\"document.getElementById('idmodelDeployWar').style.display = 'none'\" class=\"cancelbtn\">Cancel</button>\n");
      out.write("            <!--<button type=\"submit\" class=\"sucessbtn\" >Deployment</button>-->\n");
      out.write("            <button type=\"button\" class=\"sucessbtn\" ng-click=\"DeployFileWar()\">Deployment</button>\n");
      out.write("        </div>\n");
      out.write("    </form>\n");
      out.write("</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
