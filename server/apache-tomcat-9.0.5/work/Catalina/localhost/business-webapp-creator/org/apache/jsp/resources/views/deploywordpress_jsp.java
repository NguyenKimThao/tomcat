/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.5
 * Generated at: 2019-02-07 14:11:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.resources.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class deploywordpress_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<div class=\"body\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"./resources/css/stylewordpress.min.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"./resources/css/buttons.min.css\">\n");
      out.write("    <h1 id=\"logo\"><a href=\"http://wp-quick-install.com\">WordPress</a></h1>\n");
      out.write("\n");
      out.write("    <div id=\"response\"></div>\n");
      out.write("    <div class=\"progress\" style=\"display:none;\">\n");
      out.write("        <div class=\"progress-bar progress-bar-striped active\" style=\"width: 0%;\"></div>\n");
      out.write("    </div>\n");
      out.write("    <div id=\"errors\" class=\"alert alert-danger\" style=\"display:none;\">\n");
      out.write("        <strong>Warning</strong>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <div id=\"success\" class=\"hidden\" style=\"margin: 10px 0px;\">\n");
      out.write("        <h1 style=\"margin: 0\">The world is yours</h1>\n");
      out.write("        <p>WordPress has been installed.</p>\n");
      out.write("        <div id=\"errors\" class=\"alert alert-danger\"><p style=\"margin:0;\">\n");
      out.write("                <strong>Warning</strong>: You created WordPress: {{wordpressName}} in Workspace {{wordpressName}}.</p>\n");
      out.write("        </div>\n");
      out.write("        <a href=\"{{urlAdmin}}\" class=\"button wp-core-ui\" style=\"margin-right:5px;\" target=\"_blank\">Log In</a>\n");
      out.write("        <a href=\"{{urlWebsite}}\" class=\"button wp-core-ui\" target=\"_blank\">Go to website</a>\n");
      out.write("    </div>\n");
      out.write("    <div id=\"idsubmit\">\n");
      out.write("        <form id=\"formsubmit\" method=\"post\" action=\"engine/default/worksapce/deployment/wordpress\" ng-submit=\"submitDeployWordpress()\">\n");
      out.write("            <h1 style=\"text-align: center\">Workspace Name : {{workspace.workspaceName}}</h1>\n");
      out.write("            <p> </p>\n");
      out.write("            <table class=\"form-table \" >\n");
      out.write("                <tbody>\n");
      out.write("                    <tr>\n");
      out.write("                        <th scope=\"row\">\n");
      out.write("                            <label for=\"plugins\">Install Default</label>\n");
      out.write("                        </th>\n");
      out.write("                        <td>\n");
      out.write("                            <label>\n");
      out.write("                                <input type=\"checkbox\" id=\"checkboxDefault\"  value=\"1\" name=\"installDefault\">\n");
      out.write("                                Host And Database\n");
      out.write("                            </label>\n");
      out.write("                        </td>\n");
      out.write("                    </tr>\n");
      out.write("                </tbody>\n");
      out.write("            </table>\n");
      out.write("            <table class=\"form-table hidden\" id=\"formDefault\">\n");
      out.write("                <tbody>\n");
      out.write("                    <tr>\n");
      out.write("                        <th scope=\"row\"><label for=\"wphost\">Wordpress Host</label></th>\n");
      out.write("                        <td><input name=\"wphost\" id=\"wphost\" type=\"text\" size=\"25\" value=\"{{wphost}}\" class=\"required\"></td>\n");
      out.write("                        <td>The name of the host wordpress  you want to run WP in.</td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <th scope=\"row\"><label for=\"wpinstall\">Folder Install</label></th>\n");
      out.write("                        <td><input name=\"wpinstall\" id=\"wpfolderinstall\" type=\"text\" size=\"25\" value=\"{{wpinstall}}\" class=\"required\"></td>\n");
      out.write("                        <td>The folder install  of the wordpress  you want to run WP in.</td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <th scope=\"row\"><label for=\"dbname\">Database name</label></th>\n");
      out.write("                        <td><input name=\"dbname\" id=\"dbname\" type=\"text\" size=\"25\" value=\"{{dbname}}\" class=\"required\"></td>\n");
      out.write("                        <td>The name of the database you want to run WP in.</td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <th scope=\"row\"><label for=\"uname\">Database username</label></th>\n");
      out.write("                        <td><input name=\"uname\" id=\"uname\" type=\"text\" size=\"25\" value=\"root\" class=\"required\"></td>\n");
      out.write("                        <td>Your MySQL username</td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <th scope=\"row\"><label for=\"pwd\">Password</label></th>\n");
      out.write("                        <td><input name=\"pwd\" id=\"pwd\" type=\"text\" size=\"25\" value=\"\"></td>\n");
      out.write("                        <td>?and your MySQL password.</td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <th scope=\"row\"><label for=\"dbhost\">Database Host</label></th>\n");
      out.write("                        <td><input name=\"dbhost\" id=\"dbhost\" type=\"text\" size=\"25\" value=\"localhost:3305\" class=\"required\"></td>\n");
      out.write("                        <td>You should be able to get this info from your web host, if <code>localhost</code> does not work.</td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <th scope=\"row\"><label for=\"prefix\">Table Prefix</label></th>\n");
      out.write("                        <td><input name=\"prefix\" id=\"prefix\" type=\"text\" value=\"wp_\" size=\"25\" class=\"required\"></td>\n");
      out.write("                        <td>If you want to run multiple WordPress installations in a single database, change this.</td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <th scope=\"row\"><label for=\"default_content\">Default content</label></th>\n");
      out.write("                        <td>\n");
      out.write("                            <label><input type=\"checkbox\" name=\"default_content\" id=\"default_content\" value=\"1\" checked=\"checked\"> Delete the content</label>\n");
      out.write("                        </td>\n");
      out.write("                        <td>If you want to delete the default content added par WordPress (post, page, comment and links).</td>\n");
      out.write("                    </tr>\n");
      out.write("                </tbody>\n");
      out.write("            </table>\n");
      out.write("            <h1>Install Wordpress Information</h1>\n");
      out.write("            <table class=\"form-table\">\n");
      out.write("                <tbody>\n");
      out.write("                    <tr>\n");
      out.write("                        <th scope=\"row\"><label for=\"language\">Language</label></th>\n");
      out.write("                        <td>\n");
      out.write("                            <select id=\"language\" name=\"language\">\n");
      out.write("                                <option value=\"vi\" selected>VietNam</option>\n");
      out.write("                                <option value=\"en_US\">English (United States)</option>\n");
      out.write("                            </select>\n");
      out.write("                        </td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <th scope=\"row\">\n");
      out.write("                            <label for=\"wordpressName\">WordpressName</label>\n");
      out.write("                        </th>\n");
      out.write("                        <td>\n");
      out.write("                            <!--<input name=\"directory\" type=\"text\" id=\"directory\" size=\"25\" value=\"{{workspaceName}}\">-->\n");
      out.write("                            <input name=\"wordpressName\" type=\"text\" id=\"wordpressName\" size=\"25\" value=\"{{wordpressName}}\">\n");
      out.write("                        </td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <th scope=\"row\"><label for=\"weblog_title\">Site Title</label></th>\n");
      out.write("                        <td><input name=\"weblog_title\" type=\"text\" id=\"weblog_title\" size=\"25\" value=\"{{workspace.workspaceName}}\" class=\"required\"></td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <th scope=\"row\"><label for=\"user_login\">Username</label></th>\n");
      out.write("                        <td>\n");
      out.write("                            <input name=\"user_login\" type=\"text\" id=\"user_login\" size=\"25\" value=\"taonuaa004\" class=\"required\">\n");
      out.write("                            <p>Usernames can have only alphanumeric characters, spaces, underscores, hyphens, periods and the @ symbol.</p>\n");
      out.write("                        </td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <th scope=\"row\">\n");
      out.write("                            <label for=\"admin_password\">Password</label>\n");
      out.write("                            <p>A password will be automatically generated for you if you leave this blank.</p>\n");
      out.write("                        </th>\n");
      out.write("                        <td>\n");
      out.write("                            <input name=\"admin_password\" type=\"password\" id=\"admin_password\" size=\"25\" value=\"12121993a\">\n");
      out.write("                            <p>Hint: The password should be at least seven characters long. To make it stronger, use upper and lower case letters, numbers and symbols like ! \" ? $ % ^ &amp; )..</p>\n");
      out.write("                        </td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <th scope=\"row\"><label for=\"admin_email\">Your E-mail</label></th>\n");
      out.write("                        <td><input name=\"admin_email\" type=\"text\" id=\"admin_email\" size=\"25\" value=\"taonuaa004@gmail.com\" class=\"required\">\n");
      out.write("                            <p>Double-check your email address before continuing.</p></td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <th scope=\"row\"><label for=\"blog_public\">Privacy</label></th>\n");
      out.write("                        <td colspan=\"2\"><label><input type=\"checkbox\" id=\"blog_public\" name=\"blog_public\" value=\"1\" checked=\"checked\"> Allow search engines to index this site.</label></td>\n");
      out.write("                    </tr>\n");
      out.write("                </tbody></table>\n");
      out.write("\n");
      out.write("            <h1>Theme Informations</h1>\n");
      out.write("            <p>Enter the information below for your personal theme.</p>\n");
      out.write("            <div class=\"alert alert-info\">\n");
      out.write("                <p style=\"margin:0px; padding:0px;\">WP Quick Install will automatically install your theme if it's on wp-quick-install folder and named theme.zip</p>\n");
      out.write("            </div>\n");
      out.write("            <table class=\"form-table\">\n");
      out.write("                <tbody><tr>\n");
      out.write("                        <th scope=\"row\">\n");
      out.write("                            <label for=\"activate_theme\">Automatic Activation</label>\n");
      out.write("                        </th>\n");
      out.write("                        <td colspan=\"2\">\n");
      out.write("                            <label><input type=\"checkbox\" id=\"activate_theme\" name=\"activate_theme\" value=\"1\"> Activate the theme after installing WordPress.</label>\n");
      out.write("                        </td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <th scope=\"row\">\n");
      out.write("                            <label for=\"delete_default_themes\">Default Themes</label>\n");
      out.write("                        </th>\n");
      out.write("                        <td colspan=\"2\"><label><input type=\"checkbox\" id=\"delete_default_themes\" name=\"delete_default_themes\" value=\"1\"> Delete the default themes (Twenty Family).</label></td>\n");
      out.write("                    </tr>\n");
      out.write("                </tbody></table>\n");
      out.write("\n");
      out.write("            <h1>Extensions Informations</h1>\n");
      out.write("            <p>Simply enter below the extensions that should be addend during the installation.</p>\n");
      out.write("            <table class=\"form-table\">\n");
      out.write("                <tbody><tr>\n");
      out.write("                        <th scope=\"row\">\n");
      out.write("                            <label for=\"plugins\">Free Extensions</label>\n");
      out.write("                            <p>The extension slug is available in the url (Ex: http://wordpress.org/extend/plugins/<strong>wordpress-seo</strong>)</p>\n");
      out.write("                        </th>\n");
      out.write("                        <td>\n");
      out.write("                            <input name=\"plugins\" type=\"text\" id=\"plugins\" size=\"50\" value=\"\">\n");
      out.write("                            <p>Make sure that the extensions slugs are separated by a semicolon (;).</p>\n");
      out.write("                        </td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <th scope=\"row\">\n");
      out.write("                            <label for=\"plugins\">Premium Extensions</label>\n");
      out.write("                            <p>Zip Archives have to be in the <em>plugins</em> folder at the <em>wp-quick-install</em> root folder.</p>\n");
      out.write("                        </th>\n");
      out.write("                        <td><label><input type=\"checkbox\" id=\"plugins_premium\" name=\"plugins_premium\" value=\"1\"> Install the premium extensions after WordPress installation.</label></td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <th scope=\"row\">\n");
      out.write("                            <label for=\"plugins\">Automatic activation</label>\n");
      out.write("                        </th>\n");
      out.write("                        <td><label><input type=\"checkbox\" name=\"activate_plugins\" id=\"activate_plugins\" value=\"1\"> Activate the extensions after WordPress installation.</label></td>\n");
      out.write("                    </tr>\n");
      out.write("                </tbody></table>\n");
      out.write("\n");
      out.write("            <h1>Permalinks Informations</h1>\n");
      out.write("\n");
      out.write("            <p>By default WordPress uses web URLs which have question marks and lots of numbers in them; however, WordPress offers you the ability to create a custom URL structure for your permalinks and archives. This can improve the aesthetics, usability, and forward-compatibility of your links. A <a href=\"http://codex.wordpress.org/Using_Permalinks\">number of tags are available</a>.</p>\n");
      out.write("\n");
      out.write("            <table class=\"form-table\">\n");
      out.write("                <tbody><tr>\n");
      out.write("                        <th scope=\"row\">\n");
      out.write("                            <label for=\"permalink_structure\">Custom Structure</label>\n");
      out.write("                        </th>\n");
      out.write("                        <td>\n");
      out.write("                            <code>http://localhost</code>\n");
      out.write("                            <input name=\"permalink_structure\" type=\"text\" id=\"permalink_structure\" size=\"50\" value=\"/%postname%/\">\n");
      out.write("                        </td>\n");
      out.write("                    </tr>\n");
      out.write("                </tbody></table>\n");
      out.write("\n");
      out.write("            <h1>Media Informations</h1>\n");
      out.write("\n");
      out.write("            <p>Specified dimensions below determine the maximum dimensions (in pixels) to use when inserting an image into the body of an article.</p>\n");
      out.write("\n");
      out.write("            <table class=\"form-table\">\n");
      out.write("                <tbody><tr>\n");
      out.write("                        <th scope=\"row\">Thumbnail sizes</th>\n");
      out.write("                        <td>\n");
      out.write("                            <label for=\"thumbnail_size_w\">Width : </label>\n");
      out.write("                            <input name=\"thumbnail_size_w\" style=\"width:100px;\" type=\"number\" id=\"thumbnail_size_w\" min=\"0\" step=\"10\" value=\"0\" size=\"1\">\n");
      out.write("                            <label for=\"thumbnail_size_h\">Height : </label>\n");
      out.write("                            <input name=\"thumbnail_size_h\" style=\"width:100px;\" type=\"number\" id=\"thumbnail_size_h\" min=\"0\" step=\"10\" value=\"0\" size=\"1\"><br>\n");
      out.write("                            <label for=\"thumbnail_crop\" class=\"small-text\"><input name=\"thumbnail_crop\" type=\"checkbox\" id=\"thumbnail_crop\" value=\"1\" checked=\"checked\">Resize images to get the exact dimensions</label>\n");
      out.write("                        </td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <th scope=\"row\">Middle Size</th>\n");
      out.write("                        <td>\n");
      out.write("                            <label for=\"medium_size_w\">Width :</label>\n");
      out.write("                            <input name=\"medium_size_w\" style=\"width:100px;\" type=\"number\" id=\"medium_size_w\" min=\"0\" step=\"10\" value=\"0\" size=\"5\">\n");
      out.write("                            <label for=\"medium_size_h\">Height : </label>\n");
      out.write("                            <input name=\"medium_size_h\" style=\"width:100px;\" type=\"number\" id=\"medium_size_h\" min=\"0\" step=\"10\" value=\"0\" size=\"5\"><br>\n");
      out.write("                        </td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <th scope=\"row\">Big Size</th>\n");
      out.write("                        <td>\n");
      out.write("                            <label for=\"large_size_w\">Width : </label>\n");
      out.write("                            <input name=\"large_size_w\" style=\"width:100px;\" type=\"number\" id=\"large_size_w\" min=\"0\" step=\"10\" value=\"0\" size=\"5\">\n");
      out.write("                            <label for=\"large_size_h\">Height : </label>\n");
      out.write("                            <input name=\"large_size_h\" style=\"width:100px;\" type=\"number\" id=\"large_size_h\" min=\"0\" step=\"10\" value=\"0\" size=\"5\"><br>\n");
      out.write("                        </td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <th scope=\"row\">\n");
      out.write("                            <label for=\"upload_dir\">Store uploaded files in this folder</label>\n");
      out.write("                            <p>By default, medias are stored in the <em> wp-content/uploads</em> folder</p>\n");
      out.write("                        </th>\n");
      out.write("                        <td>\n");
      out.write("                            <input type=\"text\" id=\"upload_dir\" name=\"upload_dir\" size=\"46\" value=\"\"><br>\n");
      out.write("                            <label for=\"uploads_use_yearmonth_folders\" class=\"small-text\"><input name=\"uploads_use_yearmonth_folders\" type=\"checkbox\" id=\"uploads_use_yearmonth_folders\" value=\"1\" checked=\"checked\">Organize my files in monthly and annual folders</label>\n");
      out.write("                        </td>\n");
      out.write("                    </tr>\n");
      out.write("                </tbody></table>\n");
      out.write("\n");
      out.write("            <h1>wp-config.php Informations</h1>\n");
      out.write("            <p>Choose below the additional constants you want to add in <strong>wp-config.php</strong></p>\n");
      out.write("\n");
      out.write("            <table class=\"form-table\">\n");
      out.write("                <tbody><tr>\n");
      out.write("                        <th scope=\"row\">\n");
      out.write("                            <label for=\"post_revisions\">Revisions</label>\n");
      out.write("                            <p>By default, number of post revision is unlimited</p>\n");
      out.write("                        </th>\n");
      out.write("                        <td>\n");
      out.write("                            <input name=\"post_revisions\" id=\"post_revisions\" type=\"number\" min=\"0\" value=\"0\">\n");
      out.write("                        </td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <th scope=\"row\">\n");
      out.write("                            <label for=\"plugins\">Editor</label>\n");
      out.write("                        </th>\n");
      out.write("                        <td><label><input type=\"checkbox\" id=\"disallow_file_edit\" name=\"disallow_file_edit\" value=\"1\" checked=\"checked\">Disable theme and extensions editor</label></td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <th scope=\"row\">\n");
      out.write("                            <label for=\"autosave_interval\">Autosave</label>\n");
      out.write("                            <p>By default, autosave interval is 60 seconds.</p>\n");
      out.write("                        </th>\n");
      out.write("                        <td><input name=\"autosave_interval\" id=\"autosave_interval\" type=\"number\" min=\"60\" step=\"60\" size=\"25\" value=\"7200\"> seconds</td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <th scope=\"row\">\n");
      out.write("                            <label for=\"debug\">Debug Mode</label>\n");
      out.write("                        </th>\n");
      out.write("                        <td>\n");
      out.write("                            <label><input type=\"checkbox\" name=\"debug\" id=\"debug\" value=\"1\"> Enable WordPress debug mode</label><p>By checking this box, WordPress will displaying errors</p>\n");
      out.write("\n");
      out.write("                            <div id=\"debug_options\" style=\"display:none;\">\n");
      out.write("                                <label><input type=\"checkbox\" name=\"debug_display\" id=\"debug_display\" value=\"1\"> Enable WP Debug</label>\n");
      out.write("                                <br>\n");
      out.write("                                <label><input type=\"checkbox\" name=\"debug_log\" id=\"debug_log\" value=\"1\"> Write errors in a log file <em>(wp-content/debug.log)</em>. </label>\n");
      out.write("                            </div>\n");
      out.write("                        </td>\n");
      out.write("                    </tr>\n");
      out.write("                    <tr>\n");
      out.write("                        <th scope=\"row\">\n");
      out.write("                            <label for=\"wpcom_api_key\">WP.com API Key</label>\n");
      out.write("                        </th>\n");
      out.write("                        <td><input name=\"wpcom_api_key\" id=\"wpcom_api_key\" type=\"text\" size=\"25\" value=\"\"></td>\n");
      out.write("                    </tr>\n");
      out.write("                </tbody></table>\n");
      out.write("\n");
      out.write("            <p class=\"step\">\n");
      out.write("                <input id=\"submit\" class=\"button-primary button\" type=\"submit\" value=\"Install WordPress\">\n");
      out.write("            </p>\n");
      out.write("\n");
      out.write("        </form>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div id=\"waitDeploy\" class=\"modal modelDialog\">\n");
      out.write("\n");
      out.write("    <form class=\"modal-content animate\">\n");
      out.write("        <div class=\"imgcontainer\">\n");
      out.write("            <label class=\"avatar\" style=\"text-align: center\">Waiting Deployment Wordpress</label>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <div class=\"container\">\n");
      out.write("        </div>\n");
      out.write("    </form>\n");
      out.write("</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
