/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.5
 * Generated at: 2019-02-07 13:03:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.resources.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<div class=\"templatemo-flex-row\">        \n");
      out.write("        <!-- Main content -->\n");
      out.write("        <div class=\"templatemo-content col-1 light-gray-bg\">\n");
      out.write("        <div class=\"limiter\">\n");
      out.write("    <div class=\"container-login100\">\n");
      out.write("        <div class=\"wrap-login100 p-l-85 p-r-85 p-t-55 p-b-55\">\n");
      out.write("            <form class=\"login100-form validate-form flex-sb flex-w\" name=\"form\">\n");
      out.write("\t\t\t\t\t<span class=\"login100-form-title p-b-32\">\n");
      out.write("\t\t\t\t\t\tAccount Login\n");
      out.write("\t\t\t\t\t</span>\n");
      out.write("\n");
      out.write("                <span class=\"txt1 p-b-11\">\n");
      out.write("\t\t\t\t\t\tUsername\n");
      out.write("\t\t\t\t\t</span>\n");
      out.write("                <div class=\"wrap-input100 validate-input m-b-36\" data-validate = \"Username is required\">\n");
      out.write("                    <input class=\"input100\" type=\"text\" name=\"username\" ng-model=\"username\" required>\n");
      out.write("                    <span class=\"focus-input100\"></span>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <span class=\"txt1 p-b-11\">\n");
      out.write("\t\t\t\t\t\tPassword\n");
      out.write("\t\t\t\t\t</span>\n");
      out.write("                <div class=\"wrap-input100 validate-input m-b-12\" data-validate = \"Password is required\">\n");
      out.write("\t\t\t\t\t\t<span class=\"btn-show-pass\">\n");
      out.write("\t\t\t\t\t\t\t<i class=\"fa fa-eye\"></i>\n");
      out.write("\t\t\t\t\t\t</span>\n");
      out.write("                    <input class=\"input100\" type=\"password\" name=\"pass\" ng-model=\"password\" required >\n");
      out.write("                    <span class=\"focus-input100\"></span>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <div class=\"flex-sb-m w-full p-b-48\">\n");
      out.write("                    <div class=\"contact100-form-checkbox\">\n");
      out.write("                        <input class=\"input-checkbox100\" id=\"ckb1\" type=\"checkbox\" name=\"remember-me\">\n");
      out.write("                        <label class=\"label-checkbox100\" for=\"ckb1\">\n");
      out.write("                            Remember me\n");
      out.write("                        </label>\n");
      out.write("                    </div>\n");
      out.write("\n");
      out.write("                    <div>\n");
      out.write("                        <a href=\"#\" class=\"txt3\">\n");
      out.write("                            Forgot Password?\n");
      out.write("                        </a>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                <div ng-show=\"error\" class=\"alert alert-danger\">{{error}}</div>\n");
      out.write("                \n");
      out.write("                <div class=\"container-login100-form-btn\">\n");
      out.write("                    <button ng-disabled=\"form.$invalid || dataLoading\" class=\"login100-form-btn\"  ng-click=\"login()\">\n");
      out.write("                        Login\n");
      out.write("                    </button>\n");
      out.write("                    <img ng-if=\"dataLoading\" src=\"./resources/images/loading.gif\"/>    \n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("            </form>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("        </div>\n");
      out.write("</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
